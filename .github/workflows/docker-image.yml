name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    env:
      DB_CONTAINER: "restaurante-backend-tests_db_1"
      EXPRESS_CONTAINER: "restaurante-backend-tests_node-app_1"

    steps:
    - name: "Print environment variables"
      run: |
        set -o allexport
        source .env
        set +o allexport
        echo "MYSQL_HOST: $MYSQL_HOST"
        echo "MYSQL_USER: $MYSQL_USER"
        echo "MYSQL_PASSWORD: $MYSQL_PASSWORD"
        echo "MYSQL_DATABASE: $MYSQL_DATABASE"
        echo "EXPRESS_PORT: $EXPRESS_PORT"
    - uses: actions/checkout@v4
    - name: "Set up the environment"
      run: docker-compose -f docker-compose.yml up -d      
    - name: "Wait for MySQL container to be running"
      run: |
        start_time=$(date +%s)
        timeout=0
        until docker inspect $DB_CONTAINER >/dev/null 2>&1 || [ $timeout -eq 30 ]; do
            timeout=$((timeout+1))
            sleep 1
        done
        if [ $timeout -eq 30 ]; then
            echo "Timeout reached waiting for MySQL container to be running"
            exit 1
        fi
        end_time=$(date +%s)
        echo "MySQL container took $((end_time - start_time)) seconds to be ready"
    - name: "Wait for Express server to be ready"
      run: |
        start_time=$(date +%s)
        timeout=0
        until nc -z localhost 3000 || [ $timeout -eq 30 ]; do
            timeout=$((timeout+1))
            sleep 1
        done
        if [ $timeout -eq 30 ]; then
            echo "Timeout reached waiting for Express server to be ready"
            exit 1
        fi
        end_time=$(date +%s)
        echo "Express server took $((end_time - start_time)) seconds to be ready"
    - name: "Test server"
      run: docker exec $EXPRESS_CONTAINER npm run test 
